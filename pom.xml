<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 

  <parent>
    <groupId>com.fasterxml</groupId>
    <artifactId>oss-parent</artifactId>
    <version>12</version>
  </parent>

  <groupId>com.fasterxml.jackson.dataformat</groupId>
  <artifactId>jackson-dataformat-xml</artifactId>
  <version>2.4.0-SNAPSHOT</version>
  <name>Jackson-dataformat-XML</name>
  <packaging>bundle</packaging>
  <description>Data format extension for Jackson (http://jackson.codehaus.org) to offer
alternative support for serializing POJOs as XML and deserializing XML as pojos.
Support implemented on top of Stax API (javax.xml.stream), by implementing core Jackson Streaming API types like JsonGenerator, JsonParser and JsonFactory.
Some data-binding types overridden as well (ObjectMapper sub-classed as XmlMapper).
  </description>
  <url>http://wiki.fasterxml.com/JacksonExtensionXmlDataBinding</url>

  <scm>
    <connection>scm:git:git@github.com:FasterXML/jackson-dataformat-xml.git</connection>
    <developerConnection>scm:git:git@github.com:FasterXML/jackson-dataformat-xml.git</developerConnection>
    <url>http://github.com/FasterXML/jackson-dataformat-xml</url>    
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- no patch versions for annotations (since 2.3) -->
    <jackson.version.annotations>2.3.0</jackson.version.annotations>
    <jackson.version.core>2.4.0-SNAPSHOT</jackson.version.core>
    <jackson.version.jaxb>2.3.1</jackson.version.jaxb>
    <packageVersion.dir>com/fasterxml/jackson/dataformat/xml</packageVersion.dir>
    <packageVersion.package>${project.groupId}.xml</packageVersion.package>

    <osgi.export>com.fasterxml.jackson.dataformat.xml
,com.fasterxml.jackson.dataformat.xml.annotation
,com.fasterxml.jackson.dataformat.xml.deser
,com.fasterxml.jackson.dataformat.xml.jaxb
,com.fasterxml.jackson.dataformat.xml.ser
,com.fasterxml.jackson.dataformat.xml.util</osgi.export>
    <osgi.import>javax.xml.bind.annotation, javax.xml.namespace, javax.xml.stream, javax.xml.transform
,org.codehaus.stax2, org.codehaus.stax2.io, org.codehaus.stax2.ri
,com.fasterxml.jackson.annotation
,com.fasterxml.jackson.core
,com.fasterxml.jackson.core.base, com.fasterxml.jackson.core.format, com.fasterxml.jackson.core.json
,com.fasterxml.jackson.core.io, com.fasterxml.jackson.core.type, com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.cfg
,com.fasterxml.jackson.databind.deser
,com.fasterxml.jackson.databind.deser.std
,com.fasterxml.jackson.databind.introspect, com.fasterxml.jackson.databind.module
,com.fasterxml.jackson.databind.jsontype, com.fasterxml.jackson.databind.jsontype.impl
,com.fasterxml.jackson.databind.ser, com.fasterxml.jackson.databind.ser.impl, com.fasterxml.jackson.databind.ser.std
,com.fasterxml.jackson.databind.type, com.fasterxml.jackson.databind.util
,com.fasterxml.jackson.module.jaxb</osgi.import>
  </properties>

  <dependencies>
    <!-- Extends Jackson (jackson-mapper); requires Stax API (and implementation on deploy time), Stax2 API.
         Also requires JAXB annotations module
      -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version.annotations}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version.core}</version>
    </dependency>
    <!--  JAXB annotation introspector is needed too? -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${jackson.version.jaxb}</version>
    </dependency>
    <!-- JDK 1.6 provides stax-api (javax.xml.stream), but let's add this for documentation
      -->
    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0-2</version>
      <scope>provided</scope>
    </dependency>
    <!--  But Stax2 API must be included -->
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <!-- 01-Jan-2010, Stupid Maven Release plug-in mandates a non-range
            version
        -->
<!--
      <version>[3.0.4, 3.5.0)</version>
-->
      <version>3.1.1</version>
    </dependency>
    <!--  and a Stax impl is needed: SJSXP (from JDK 1.6) might work, but always   
          has odd issues. Let's default to Woodstox: caller can upgrade to Aalto
         (needs to block this dep)
      -->
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>woodstox-core-asl</artifactId>
      <version>4.1.5</version>
      <scope>test</scope>
    </dependency>


     <!--  Test Dependencies -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>
      <!--  Need to skip known-failing tests for build... -->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <excludes>
              <exclude>com/fasterxml/jackson/dataformat/xml/failing/*.java</exclude>
            </excludes>
            <includes>
              <include>**/Test*.java</include>
            </includes>
          </configuration>
        </plugin>
    </plugins>
  </build>

  <profiles>
    <!--  19-Feb-2012, tatu: Since we have some failing tests, may need to force release -->
    <profile>
      <id>force-release</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
        <skipTests>true</skipTests>
      </properties>
    </profile>
  </profiles>
  <!-- NOTE: repositories from parent POM -->

</project>
